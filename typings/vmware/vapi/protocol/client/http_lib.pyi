"""
This type stub file was generated by pyright.
"""

import six

"""
Various http lib classes
"""
__author__ = ...
__copyright__ = ...

class HTTPRequest:
    """
    This class represents an HTTP Request

    :type method: :class:`vmware.vapi.protocol.common.http_lib.HTTPMethod`
    :ivar method: The http method to be used to make the http request
    :type body: :class:`str`
    :ivar body: HTTP request body
    :type url_path: :class:`str`
    :ivar url_path: URL path that is to be appended to base URL to construct
                    final request URL
    :type headers: :class:`dict` of :class:`str`, :class:`str`
    :ivar headers: HTTP request headers
    :type cookies: :class:`dict` of :class:`str`, :class:`str`
    :ivar cookies: HTTP request cookies
    :type timeout: :class:`int`
    :ivar timeout: Timeout in seconds for the client to wait for the
                   response from the server
    """

    def __init__(
        self, method, body=..., url_path=..., headers=..., cookies=..., timeout=...
    ) -> None:
        """
        Initialize HTTPRequest

        :type  method: :class:`vmware.vapi.protocol.common.http_lib.HTTPMethod`
        :param method: The http method to be used to make the http request
        :type  body: :class:`str`
        :param body: HTTP request body
        :type  url_path: :class:`str`
        :param url_path: URL path that is to be appended to base URL to
            construct final request URL
        :type  headers: :class:`dict` of :class:`str`, :class:`str`
        :param headers: HTTP request headers
        :type  cookies: :class:`dict` of :class:`str`, :class:`str`
        :param cookies: HTTP request cookies
        :type  timeout: :class:`int`
        :param timeout: Timeout in seconds for the client to wait for the
                        response from the server
        """
        ...

class HTTPResponse:
    """
    This class represents an HTTP Response

    :type status: :class:`int`
    :ivar status: HTTP response status code
    :type headers: :class:`dict` of :class:`str`, :class:`str`
    :ivar headers: HTTP response headers
    :type body: :class:`str`
    :ivar body: HTTP response body
    :type data: :class:`object`
    :ivar data: Extra data depending on the HTTP library used
    """

    def __init__(self, status, headers, body=..., data=...) -> None:
        """
        Initialize HTTPResponse

        :type  status: :class:`int`
        :param status: HTTP response status code
        :type  headers: :class:`dict` of :class:`str`, :class:`str`
        :param headers: HTTP response headers
        :type  body: :class:`str`
        :param body: HTTP response body
        :type  data: :class:`object`
        :param body: Extra data depending on the HTTP library used
        """
        ...

class HTTPMethod(six.text_type):
    """
    Enum representing the HTTP method
    """

    DELETE = ...
    GET = ...
    HEAD = ...
    OPTIONS = ...
    PATCH = ...
    POST = ...
    PUT = ...
