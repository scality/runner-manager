"""
This type stub file was generated by pyright.
"""

from vmware.vapi.security.rest import SecurityContextParser

"""
User password Security Helper
"""
__author__ = ...
__copyright__ = ...
USER_PASSWORD_SCHEME_ID = ...
USER_KEY = ...
PASSWORD_KEY = ...
HTTP_AUTH_HEADER_NAME = ...
HTTP_BASIC_AUTH_HEADER_PARAM = ...

def create_user_password_security_context(user_name, password):  # -> SecurityContext:
    """
    Create a security context for Username-Password based authentication
    scheme

    :type  user_name: :class:`str`
    :param user_name: Name of the user
    :type  password: :class:`str`
    :param password: Password of the user
    :rtype: :class:`vmware.vapi.core.SecurityContext`
    :return: Newly created security context
    """
    ...

class UserPasswordSecurityContextParser(SecurityContextParser):
    """
    Security context parser used by the REST presentation layer
    that builds a security context if the REST request has
    username/password credentials in the HTTP header.
    """

    def __init__(self) -> None:
        """
        Initialize UserPasswordSecurityContextParser
        """
        ...

    def build(self, request):  # -> SecurityContext | None:
        """
        Build the security context if the request has authorization
        header that contains base64 encoded string of username/password.

        If the request authorization header doesn't have the username/password,
        this method returns None.

        :type  request: :class:`werkzeug.wrappers.Request`
        :param request: Request object
        :rtype: :class:`vmware.vapi.core.SecurityContext` or ``None``
        :return: Security context object
        """
        ...
