"""
This type stub file was generated by pyright.
"""

"""
StubConfiguration factory
"""
__author__ = ...
__copyright__ = ...

class StubConfigurationFactory:
    """
    Factory class for creating stub configuration objects
    """

    @staticmethod
    def new_configuration(connector, *errorTypes):  # -> StubConfiguration:
        """
        Return a stub configuration using the specified connection, with no
        registered errors.

        :type  connector:
            :class:`vmware.vapi.protocol.client.connector.Connector`
        :param connector: Connection to be used to talk to the remote
                          ApiProvider
        :type  error_types: :class:`list` of
            :class:`vmware.vapi.bindings.type.ErrorType`
        :param error_types: error types to be registered in the configuration
        """
        ...

    @staticmethod
    def new_runtime_configuration(
        connector, *errorTypes, **kwargs
    ):  # -> StubConfiguration:
        """
        Return a stub configuration using the specified connection, with the
        errors reported by the vAPI runtime registered.

        :type  connector:
            :class:`vmware.vapi.protocol.client.connector.Connector`
        :param connector: Connection to be used to talk to the remote
                          ApiProvider
        :type  error_types: :class:`list` of
            :class:`vmware.vapi.bindings.type.ErrorType`
        :type kwargs: :class: `vmware.vapi.bindings.http_helper.ResponseExtractor`    # pylint: disable=line-too-long
        :param kwargs: Extract rest http response status
        :param error_types: additional error types to be registered in the
                            configuration
        """
        ...

    @staticmethod
    def new_std_configuration(connector, *errorTypes):  # -> StubConfiguration:
        """
        Return a stub configuration using the specified connection, with all the
        standard errors registered.

        :type  connector:
            :class:`vmware.vapi.protocol.client.connector.Connector`
        :param connector: Connection to be used to talk to the remote
                          ApiProvider
        :type  error_types: :class:`list` of
            :class:`vmware.vapi.bindings.type.ErrorType`
        :param error_types: additional error types to be registered in the
                            configuration
        """
        ...
