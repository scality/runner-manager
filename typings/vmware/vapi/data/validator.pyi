"""
This type stub file was generated by pyright.
"""

import abc
import six

"""
Data Validator classes
"""
__author__ = ...
__copyright__ = ...
logger = ...

@six.add_metaclass(abc.ABCMeta)
class Validator:
    """
    vAPI Data object validator class
    This is an abstract class.
    """

    @abc.abstractmethod
    def validate(self, data_value, data_type=...):  # -> None:
        """
        This method validates a data value

        :type data_value :class:`vmware.vapi.data.value.DataValue`
        :param data_value The struct value that needs to be validated
        :type data_type :class:`vmware.vapi.binding.type.BindingType`
        :param data_type The Struct binding type
        :type  ctx: :class:`vmware.vapi.core.ExecutionContext`
        :param ctx: Execution context for this method
        :rtype: :class:`list` of :class:`vmware.vapi.message.Message`
                        or ``None``
        :return List of error messages if validation fails or None
        """
        ...

class UnionValidator(Validator):
    """
    Union Validator class that validates a struct value for union consistency
    """

    def __init__(self, discriminant_name, case_map) -> None:
        """
        Initialize the union validator class

        :type discriminant_name :class:`str`
        :param discriminant_name Name of a structure field that represents a
                                 union discriminant
        :type case_map :class:`dict`
        :param case_map Python dict with string value of the discriminant as
                        dictionary key and list of tuple of structure field
                        associated with it and a boolean representing whether
                        it is rqeuired as dictionary value
        """
        ...

    def validate(self, data_value, data_type=...):  # -> list[Message] | None:
        """
        Validates a struct value for union consistency

        :type data_value :class:`vmware.vapi.data.value.DataValue`
        :param data_value The struct value that needs to be validated
        :type data_type :class:`vmware.vapi.binding.type.BindingType`
        :param data_type The Struct binding type
        :type  ctx: :class:`vmware.vapi.core.ExecutionContext`
        :param ctx: Execution context for this method
        :rtype: :class:`list` of :class:`vmware.vapi.message.Message`
                        or ``None``
        :return List of error messages if validation fails or None
        """
        ...

class HasFieldsOfValidator(Validator):
    """
    HasFieldsOfValidator validator class that validates the data_value has
    required fields of the class specified
    """

    def __init__(self) -> None: ...
    def validate(self, data_value, data_type=...):  # -> list[Message] | Any | None:
        """
        Validates whether a StructValue satisfies the HasFieldsOf constraint

        :type data_value :class:`vmware.vapi.data.value.DataValue`
        :param data_value The struct value that needs to be validated
        :type data_type :class:`vmware.vapi.binding.type.BindingType`
        :param data_type The Struct binding type
        :type  ctx: :class:`vmware.vapi.core.ExecutionContext`
        :param ctx: Execution context for this method
        :rtype: :class:`list` of :class:`vmware.vapi.message.Message`
                        or ``None``
        :return List of error messages if validation fails or None
        """
        ...
