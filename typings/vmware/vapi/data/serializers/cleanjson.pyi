"""
This type stub file was generated by pyright.
"""

import json

"""
Serializer vAPI data values to clean (human readable/writable) json documents
"""
__author__ = ...
__copyright__ = ...
logger = ...

class DataValueToJSONEncoder(json.JSONEncoder):
    """
    Custom JSON encoder that converts vAPI runtime values directly
    into JSON string representation.
    """

    def __init__(self, *args, **kwargs) -> None: ...
    def encode(self, value):
        """
        Encode a given vAPI runtime object

        :type  value: :class:`object`
        :param value: vAPI runtime object
        :rtype: :class:`str`
        :return: JSON string
        """
        ...

    def visit_struct_value(self, value):  # -> str:
        """
        Visit a StructValue object

        :type  value: :class:`vmware.vapi.data.value.StructValue`
        :param value: Struct value object
        :rtype: :class:`str`
        :return: JSON string
        """
        ...

    def visit_list(self, value):  # -> LiteralString:
        """
        Visit a ListValue object

        :type  value: :class:`vmware.vapi.data.value.ListValue`
        :param value: List value object
        :rtype: :class:`str`
        :return: JSON string
        """
        ...

    def visit_optional_value(self, value):  # -> Literal['null']:
        """
        Visit a OptionalValue object

        :type  value: :class:`vmware.vapi.data.value.OptionalValue`
        :param value: Optional value object
        :rtype: :class:`str`
        :return: JSON string
        """
        ...

    @staticmethod
    def visit_double_value(value):  # -> str:
        """
        Visit a DoubleValue object

        :type  value: :class:`vmware.vapi.data.value.DoubleValue`
        :param value: Double value object
        :rtype: :class:`str`
        :return: JSON string
        """
        ...

    def visit_primitive_value(self, value):  # -> str:
        """
        Visit one of StringValue, IntegerValue, BooleanValue or VoidValue

        :type  value: :class:`vmware.vapi.data.value.StringValue` (or)
            :class:`vmware.vapi.data.value.IntegerValue` (or)
            :class:`vmware.vapi.data.value.BooleanValue` (or)
            :class:`vmware.vapi.data.value.VoidValue` (or)
        :param value: StringValue, IntegerValue, BooleanValue or
                      VoidValue object
        :rtype: :class:`str`
        :return: JSON string
        """
        ...

    def visit_blob_value(self, value):  # -> str:
        """
        Visit BlobValue

        :type  value: :class:`vmware.vapi.data.value.BlobValue`
        :param value: BlobValue object
        :rtype: :class:`str`
        :return: JSON string
        """
        ...

    def visit_default(self, value):  # -> str:
        """
        This is the default visit method if the type of the input value
        does not match any type in the keys present in dispatch map.

        :type  value: :class:`object`
        :param value: Python object
        :rtype: :class:`str`
        :return: JSON string
        """
        ...

class DataValueToRestJSONEncoder(DataValueToJSONEncoder):
    """
    Custom JSON encoder that converts vAPI runtime values directly
    into REST 2018 JSON string representation.
    """

    def __init__(self, *args, **kwargs) -> None: ...
    def visit_list(self, value):  # -> LiteralString:
        """
        Visit a ListValue object

        :type  value: :class:`vmware.vapi.data.value.ListValue`
        :param value: List value object
        :rtype: :class:`str`
        :return: JSON string
        """
        ...

    def map_entry(self, value):  # -> LiteralString:
        """
        Visit a StructValue object

        :type  value: :class:`vmware.vapi.data.value.StructValue`
        :param value: Struct value object
        :rtype: :class:`str`
        :return: JSON string
        """
        ...

class JsonDictToVapi:
    """Clean Json dict to vapi data value"""

    def __init__(self) -> None: ...
    def data_value(self, obj):
        """
        Convert json object to data value

        :type  obj: :class:`object`
        :param obj: Python object
        :rtype: :class:`vmware.vapi.data.value.DataValue`
        :return: Data value
        """
        ...

class DataValueConverter:
    """
    Converter class that converts values from vAPI DataValue to clean
    JSON objects and back.
    """

    @staticmethod
    def convert_to_json(data_value, new_rest=...):  # -> str:
        """
        Convert the given data value to a JSON string representation

        :type  data_value: :class:`vmware.vapi.data.value.DataValue`
        :param data_value: Data value to be converted
        :type  new_rest: :class:`bool`
        :param new_rest: Is it a REST 2018 call
        :rtype: :class:`str`
        :return: JSON representation of the data value
        """
        ...

    @staticmethod
    def convert_to_data_value(json_string):
        """
        Convert the given json string to data value

        :type  json_string: :class:`str`
        :param json_string: JSON representation of the data value
        :rtype: :class:`vmware.vapi.data.value.DataValue`
        :return: Data value
        """
        ...
