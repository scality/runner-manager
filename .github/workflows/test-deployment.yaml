---
name: test-deployment

on: pull_request

permissions:
  contents: write
  packages: write

jobs:
  test-deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build runner-manager image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
          cache-from: type=gha,scope=runner-manager
          cache-to: type=gha,mode=max,scope=runner-manager
      - uses: helm/kind-action@v1
        with:
          cluster_name: kind
      - name: Wait for kind node to be ready
        run: kubectl wait --for=condition=Ready node/kind-control-plane --timeout=120s
      - name: Load image to kind cluster
        run: kind load docker-image ghcr.io/${{ github.repository }}:${{ github.sha }}
      - name: Edit the runner-manager image
        working-directory: manifests
        run: kustomize edit set image ghcr.io/${{ github.repository }}:${{ github.sha }}
      - name: Deploy runner-manager
        run: kubectl apply -k manifests
      - name: Check if deployment is ready
        run: |
          kubectl rollout status statefulset runner-manager-redis --timeout=90s
          kubectl rollout status deployment runner-manager-api --timeout=120s
          kubectl rollout status deployment runner-manager-worker --timeout=120s
          kubectl rollout status deployment runner-manager-scheduler --timeout=120s
      - name: get all resources
        if: failure()
        run: kubectl get all
      - name: describe all resources
        if: failure()
        run: kubectl describe all
      - name: get logs
        if: failure()
        run: |
          kubectl logs -l app.kubernetes.io/name=runner-manager
          kubectl logs -l app.kubernetes.io/component=worker
          kubectl logs -l app.kubernetes.io/component=scheduler
          kubectl logs -l app.kubernetes.io/component=redis
