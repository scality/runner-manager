# Your github organization where you want to attach your self-hosted runners
github_organization: ""

# Cloud connection infos
cloud_name: 'aws'
cloud_config:
  aws_tags:
    lifecycle_autostop: no
    lifecycle_autostart: no
    map-migrated: 'mig42992'
    owner: 'ci'
    tool: 'runner-manager'

# SSH key added on each runner
allowed_ssh_keys: ""

# The python module, used for configuration
# example:
#  'settings.settings_local'
python_config: 'settings.settings_local'

# Represent the infos about each group of runners
# Define by:
#  - There config depending on the cloud backend
#  - The quantity allowed to spawn at the same time
#  - The tags use by github actions
# Example:
#  runner_pool:
#    - config:
#        flavor: 'm1.small'
#        image: 'CentOS 7 (PVHVM)'
#      quantity:
#        min: 2
#        max: 4
#      tags:
#        - centos7
#        - small
runner_pool:
  - config:
      image_id: 'ami-0735c191cf914754d'
      instance_type: 't2.micro'
      security_group_ids:
        - 'sg-04a0f254a058a4c81'
        - 'sg-0cf1e17cf459cfeff'
      subnet_id: 'subnet-0a10841e744637b49'
      disk_size_gb: 30
    quantity:
      min: 2
      max: 4
    tags:
      - aws
      - ubuntu
      - jammy
      - small

# If the number of runners is greater than `min`
# after x min / hours it will delete them to return to min number
extra_runner_timer:
  minutes: 10
  hours: 0

# The runner will be killed if it isn't available after this timer
timeout_runner_timer:
  minutes: 15
  hours: 0

# Define the credentials to connect your redis database
redis:
  host: redis
  port: 6379
