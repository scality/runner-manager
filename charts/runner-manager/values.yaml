# Default values for runner-manager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  pullPolicy: IfNotPresent
  tag: "0.1.0"
  manager:
      repository: registry.scality.com/openstack-actions-runner/openstack-actions-runner
      # Overrides the image tag whose default is the chart appVersion.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## Kubernetes deployment configuration
deployment:
  ## Kubernetes service configuration
  service:
    type: ClusterIP
    port: 80

  ## Configure the ingress resource that allows you to access the service.
  ingress:
    ## enabled sets the ingress record generation or not.
    ##
    ##   Defaults to false.
    ##
    enabled: false

    ## fqdn is the protocol/hostname to be covered with this ingress record.
    ##
    fqdn: "http://runner-manager.local"

    ## path contains the subpath where to access the HTTP service.
    ##
    ##   Defaults to '/'.
    ##
    path: "/"

    ## tls is set to true in order to enable TLS on the ingress record.
    ##
    ##   Defaults to false.
    ##
    tls: false

    ## tlsSecret specifies a secret that contains the key/certificate for TLS
    ##
    tlsSecret: "tls-secret"

    ## annotations contains the Ingress annotations done as key:value pairs
    ##
    annotations: {}

    ## User password generated by htpasswd for basic auth ingress authentication
    ##
    basicAuthCreds: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

githubToken: ""
githubOrganization: ""
redhatUsername: ""
redhatPassword: ""

# Cloud connection name
cloudName: 'openstack'
# Cloud config, it will change depending on your cloud
cloudConfig: {}

# Content of Google cloud service account json file
gcloudServiceAccount: ''

allowedSshKeys: ''

# AWS credentials and config
awsAccessKey: ''
awsSecretKey: ''
awsSessionToken: ''
awsDefaultRegion: 'us-west-2'

# The python module, used for configuration
# example:
#  'settings.settings_local'
pythonConfigModule: 'settings.settings_local'

# Represent the infos about each group of runners
# Define by:
#  - There config depending on the cloud backend
#  - The quantity allowed to spawn at the same time
#  - The tags use by github actions
# Example:
# runner_pool:
#   - config:
#       flavor: 'm1.small'
#       image: 'CentOS 7 (PVHVM)'
#     quantity:
#       min: 2
#       max: 4
#     tags:
#       - centos7
#       - small
runnerPool: []

# If a runner is not used for the extraRunnerTime, and there is enough runners, he is deleted
extraRunnerTimer:
  minutes: 10
  hours: 0

# If the runner is not spawned after this timer, it is considered as dead, and is deleted.
timeoutRunnerTimer:
  minutes: 15
  hours: 0

# Redis database config
redis:
  fullnameOverride: redis
  redisPort: 6379
  networkPolicy:
    enabled: true

serviceMonitor:
  enabled: false
  labels: {}
  interval: 30s
  timeout: 30s
